// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct CatalogItem {
        public let externalId: String
        public let images: [Shared.Images]
        public let productType: String
        public let productUrl: String
        public let status: Shared.Status
        public let title: String
        public let variants: [Shared.Variants]
        public let brand: String?
        public let category: [String]?
        public let description: String?
        public let mpn: String?
        public let tags: [String]?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(externalId: String, images: [Shared.Images], productType: String, productUrl: String, status: Shared.Status, title: String, variants: [Shared.Variants], brand: String? = nil, category: [String]? = nil, description: String? = nil, mpn: String? = nil, tags: [String]? = nil) {
            self.externalId = externalId
            self.images = images
            self.productType = productType
            self.productUrl = productUrl
            self.status = status
            self.title = title
            self.variants = variants
            self.brand = brand
            self.category = category
            self.description = description
            self.mpn = mpn
            self.tags = tags
        }
    }
}

extension Shared.CatalogItem: Codable {
    enum CodingKeys: String, CodingKey {
        case externalId = "external_id"
        case images
        case productType = "product_type"
        case productUrl = "product_url"
        case status
        case title
        case variants
        case brand
        case category
        case description
        case mpn
        case tags
    }
}

